@inject IJSRuntime JSRuntime
<div class="row">
    <div class="col-md-10 col-sm-12">
        <EditForm Model="@Funcionario" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="row">
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label>Nome</label>
                        <InputText @bind-Value="@Funcionario.Nome" class="form-control"></InputText>
                        <ValidationMessage For="@(() => Funcionario.Nome)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label>CPF</label>
                        <input type="text" @bind="@Funcionario.Cpf" class="form-control" id="cpf"/>
                        <ValidationMessage For="@(() => Funcionario.Cpf)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-4 col-sm-12">
                    <div class="form-group">
                        <label>Data de Nascimento</label>
                        <InputDate @bind-Value="@Funcionario.Data_nascimento" class="form-control"></InputDate>
                        <ValidationMessage For="@(() => Funcionario.Data_nascimento)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-4 col-sm-12">
                    <div class="form-group">
                        <label>E-mail</label>
                        <InputText @bind-Value="@Funcionario.Email" class="form-control"></InputText>
                        <ValidationMessage For="@(() => Funcionario.Email)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-4 col-sm-12">
                    <div class="form-group">
                        <label>Senha</label>
                        <input type="password" @bind="@Funcionario.Senha" class="form-control" />
                        <ValidationMessage For="@(() => Funcionario.Senha)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-3 col-sm-12">
                    <div class="form-group">
                        <label>Telefone</label>
                        <input type="text" @bind="@Funcionario.Telefone.Telefones" class="form-control" id="telefone"/>
                        <ValidationMessage For="@(() => Funcionario.Telefone.Telefones)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-3 col-sm-12">
                    <div class="form-group">
                        <label>Cargo</label>
                        <InputSelect @bind-Value="@Funcionario.Cargo" class="form-control">
                            <option value=""></option>
                            <option value="RH">RH</option>
                            <option value="Vendedor">Vendedor</option>
                            <option value="Gerente">Gerente</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => Funcionario.Cargo)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-3 col-sm-12">
                    <div class="form-group">
                        <label>Salário</label>
                        <InputText @bind-Value="@Funcionario.Salario" class="form-control"></InputText>
                        <ValidationMessage For="@(() => Funcionario.Salario)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-3 col-sm-12">
                    <div class="form-group">
                        <label>Status</label>
                        <InputSelect @bind-Value="@Funcionario.Status" class="form-control">
                            <option value=""></option>
                            <option value="Ativo">Ativo</option>
                            <option value="Inativo">Inativo</option>
                        </InputSelect>
                        <ValidationMessage For="@(() => Funcionario.Status)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-3 col-sm-12">
                    <div class="form-group">
                        <label>CEP</label>
                        <input type="text" @bind="@Funcionario.Endereco.Cep" @onblur="PesquisaCEP" id="cep" class="form-control"/>
                        <ValidationMessage For="@(() => Funcionario.Endereco.Cep)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-3 col-sm-12">
                    <div class="form-group">
                        <label>Número</label>
                        <InputNumber @bind-Value="@Funcionario.Endereco.Numero" class="form-control"></InputNumber>
                        <ValidationMessage For="@(() => Funcionario.Endereco.Numero)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label>Rua</label>
                        <input type="text" @bind="@Funcionario.Endereco.Rua" @ref="MyRua" class="form-control"/>
                        <ValidationMessage For="@(() => Funcionario.Endereco.Rua)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Bairro</label>
                        <input type="text" @bind="@Funcionario.Endereco.Bairro" @ref="MyBairro" class="form-control"/>
                        <ValidationMessage For="@(() => Funcionario.Endereco.Bairro)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Cidade</label>
                        <input type="text" @bind="@Funcionario.Endereco.Cidade" @ref="MyCidade" class="form-control"/>
                        <ValidationMessage For="@(() => Funcionario.Endereco.Cidade)"></ValidationMessage>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>Estado</label>
                        <input type="text" @bind="@Funcionario.Endereco.Estado" @ref="MyEstado" class="form-control"/>
                        <ValidationMessage For="@(() => Funcionario.Endereco.Estado)"></ValidationMessage>
                    </div>
                </div>
                <button type="submit" class="btn btn-success ml-3">@ButtonText</button>
                <a href="/Funcionarios" class="btn btn-primary ml-2">Voltar</a>
            </div>
        </EditForm>
    </div>
</div>


@code{
    [Parameter] public Funcionario Funcionario { get; set; }

    [Parameter] public string ButtonText { get; set; }

    [Parameter] public EventCallback OnValidSubmit { get; set; }

    ElementReference MyRua, MyBairro, MyCidade, MyEstado;

    HttpClient client = new HttpClient();

    protected async void PesquisaCEP()
    {

        try
        {
            HttpResponseMessage response = await client.GetAsync("https://viacep.com.br/ws/" + Funcionario.Endereco.Cep + "/json/");

            string responseBody = await response.Content.ReadAsStringAsync();
            PesquisaCEP cepParse = Newtonsoft.Json.JsonConvert.DeserializeObject<PesquisaCEP>(responseBody);

            if (cepParse.logradouro != null)
            {
                Funcionario.Endereco.Rua = cepParse.logradouro;
                Funcionario.Endereco.Bairro = cepParse.bairro;
                Funcionario.Endereco.Cidade = cepParse.localidade;
                Funcionario.Endereco.Estado = cepParse.uf;

                await JSRuntime.InvokeVoidAsync("BlazorCEP.setCEP", MyRua, MyBairro, MyCidade, MyEstado, responseBody);
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "CEP inválido!");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            await JSRuntime.InvokeVoidAsync("alert", "CEP inválido!");

        }
    }
}
