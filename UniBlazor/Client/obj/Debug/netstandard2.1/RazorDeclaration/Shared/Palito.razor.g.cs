#pragma checksum "D:\FINAL\UniBlazor\UniBlazor\Client\Shared\Palito.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2643e44c59ebccda5b077c48bb5baaa8e9a24b1f"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace UniBlazor.Client.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using UniBlazor.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using UniBlazor.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using UniBlazor.Client.Repository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using UniBlazor.Shared.DTOs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using UniBlazor.Shared.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\FINAL\UniBlazor\UniBlazor\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/palito")]
    public partial class Palito : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 37 "D:\FINAL\UniBlazor\UniBlazor\Client\Shared\Palito.razor"
      
    private int quantidadePalito = 20;
    private int quantidadeRetirar = 1;

    private int quantidadeTotal;   // inicializa a variavel
    private int numeroRetirada;  // numero que sera retirado
    private bool isValid = true;
    private bool isDisabled = false;
    private string isAgain = "none";

    private List<String> Resultados = new List<string>(); // Lista Resultados

    public void ComecarJogo()
    {
        quantidadeTotal = quantidadePalito;  // a variavel quantidade recebe o valor do input
        isDisabled = true;
        isValid = false;
    }

    private void RetirarPalito(int quantidadePalitos, int valorRetirar)
    {
        if (quantidadePalitos == 3)
        {
            numeroRetirada = 1;
            quantidadePalitos = quantidadePalitos - numeroRetirada; // o valor de palitos inseridos pelo usuario é diminuido da quantidade

            Resultados.Add("Retiro: " + numeroRetirada + " Palitos");
            Resultados.Add("Sua vez..");
            Resultados.Add("Restam " + quantidadePalitos + " Palitos");

            quantidadeTotal = quantidadePalitos; // a variavel quantidade recebe seu novo valor
        }
        else if ((quantidadePalitos % 4 != 0) && (quantidadePalitos % 2 != 0))
        {
            numeroRetirada = 3;

            if (quantidadePalitos == 19)
            {
                numeroRetirada = 2;
            }

            quantidadePalitos = quantidadePalitos - numeroRetirada;// o valor de palitos inseridos pelo usuario é diminuido da quantidade

            Resultados.Add("Retiro: " + numeroRetirada + " Palitos");
            Resultados.Add("Sua vez..");
            Resultados.Add("Restam " + quantidadePalitos + " Palitos");

            quantidadeTotal = quantidadePalitos; // a variavel quantidade recebe seu novo valor
        }
        else
        {  // se a quantidade escolhida for divida por 4 e o resto da divisão for diferente zero
            numeroRetirada = 4 - valorRetirar; // a variavel recebe a subtração entre numero quatro e o número de palitos a serem removidos na jogada do usuario

            quantidadePalitos = quantidadePalitos - numeroRetirada; // é subtraido o novo valor da variavel quantidade
            quantidadeTotal = quantidadePalitos; // a variavel quantidade recebe seu novo valor

            Resultados.Add("Retiro: " + numeroRetirada + " Palitos");
            Resultados.Add("Sua vez..");
            Resultados.Add("Restam " + quantidadePalitos + " Palitos\n");
        }
    }

    public void RemoverPalito()
    {
        Resultados.Clear();

        if (quantidadeRetirar > quantidadeTotal)
        {
            Resultados.Add("Não é possível retirar essa quantidade de palitos! Palitos Insuficientes");
        }
        else
        {
            quantidadeTotal = quantidadeTotal - quantidadeRetirar; // retira o valor inserido da quantidade

            Resultados.Add("Você retirou " + quantidadeRetirar + " Palitos");
            Resultados.Add("Restam " + quantidadeTotal + " Palitos\n");

            if (quantidadeTotal == 1)
            { // se a quantidade for igual a zero
                Resultados.Add("Eu Perdi! Impossível!!"); // o jogador ganha
                isValid = true;
                isAgain = "block";
            }
            else if (quantidadeTotal <= 0)
            { // se a quantidade for igual a zero
                Resultados.Clear();
                Resultados.Add("Você perdeu... Kkkk Muito Fácil!!!"); // o computador vence
                isValid = true;
                isAgain = "block";
            }
            else
            {
                RetirarPalito(quantidadeTotal, quantidadeRetirar); // chama o metedo retirar palitos e passa o novo valor da quantidade, o numero de palitos para retirar e que a primeira jogada é falsa
            }
        }
    }

    public void ReiniciarJogo()
    {
        isDisabled = false;
        isValid = true;
        isAgain = "none";
        Resultados.Clear();
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
